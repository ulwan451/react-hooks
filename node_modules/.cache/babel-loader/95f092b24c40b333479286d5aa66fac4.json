{"ast":null,"code":"import _objectSpread from \"/home/ulwan/ReactApp/hooks-crud/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/ulwan/ReactApp/hooks-crud/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ulwan/ReactApp/hooks-crud/src/forms/EditUserForm.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst EditUserForm = props => {\n  const _useState = useState(props.currentUser),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    setUser(props.currentUser);\n  }, [props]); //efek akan dilewati jika nilai-nilai tertentu tidak berubah di antara yang dirender ulang. [ props ]\n  // controlled input\n\n  const handleInputChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUser(_objectSpread({}, user, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form-group\",\n    onSubmit: event => {\n      event.preventDefault();\n      props.updateUser(user.id, user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    value: user.name,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"username\",\n    value: user.username,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-dark mt-3 mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Update user\"), React.createElement(\"button\", {\n    className: \"btn btn-light mt-3\",\n    onClick: () => props.setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Cancel\"));\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["/home/ulwan/ReactApp/hooks-crud/src/forms/EditUserForm.js"],"names":["React","useState","useEffect","EditUserForm","props","currentUser","user","setUser","handleInputChange","event","target","name","value","preventDefault","updateUser","id","username","setEditing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,oBACJH,QAAQ,CAACG,KAAK,CAACC,WAAP,CADJ;AAAA;AAAA,QACrBC,IADqB;AAAA,QACfC,OADe;;AAG5BL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACH,KAAK,CAACC,WAAP,CAAP;AACD,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT,CAH4B,CAKf;AACb;;AACA,QAAMI,iBAAiB,GAAGC,KAAK,IAAI;AAAA,0BACTA,KAAK,CAACC,MADG;AAAA,UACzBC,IADyB,iBACzBA,IADyB;AAAA,UACnBC,KADmB,iBACnBA,KADmB;AAGjCL,IAAAA,OAAO,mBAAMD,IAAN;AAAY,OAACK,IAAD,GAAQC;AAApB,OAAP;AACD,GAJD;;AAMA,SACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,QAAQ,EAAEH,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACI,cAAN;AAEAT,MAAAA,KAAK,CAACU,UAAN,CAAiBR,IAAI,CAACS,EAAtB,EAA0BT,IAA1B;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEA,IAAI,CAACK,IAJd;AAKE,IAAA,QAAQ,EAAEH,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,EAiBE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEF,IAAI,CAACU,QAJd;AAKE,IAAA,QAAQ,EAAER,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAwBE;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAxBF,EAyBE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,OAAO,EAAE,MAAMJ,KAAK,CAACa,UAAN,CAAiB,KAAjB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,CADF;AAkCD,CA/CD;;AAiDA,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst EditUserForm = props => {\n  const [user, setUser] = useState(props.currentUser);\n\n  useEffect(() => {\n    setUser(props.currentUser);\n  }, [props]); //efek akan dilewati jika nilai-nilai tertentu tidak berubah di antara yang dirender ulang. [ props ]\n  // controlled input\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form\n      className=\"form-group\"\n      onSubmit={event => {\n        event.preventDefault();\n\n        props.updateUser(user.id, user);\n      }}\n    >\n      <label>Name</label>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        name=\"name\"\n        value={user.name}\n        onChange={handleInputChange}\n      />\n      <label>Username</label>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        name=\"username\"\n        value={user.username}\n        onChange={handleInputChange}\n      />\n      <button className=\"btn btn-dark mt-3 mr-2\">Update user</button>\n      <button\n        className=\"btn btn-light mt-3\"\n        onClick={() => props.setEditing(false)}\n      >\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}